name: Run Vitest

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
    paths-ignore:
      - ".github/workflows/deploy.yml"

jobs:
  test:
    name: Run vitest on Node 20
    runs-on: ubuntu-latest

    steps:
      - name: Install pnpm
        run: npm install -g pnpm

      - name: Checkout repository
        # クローンされたリポジトリの内容をワークフロー環境に配置
        uses: actions/checkout@v4

      - name: Setup Node.js
        # Node.js 20 と pnpm の環境を準備し依存キャッシュを有効化
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Configure pnpm store
        run: pnpm config set store-dir ~/.pnpm-store

      - name: Cache pnpm dependencies
        uses: actions/cache@v4
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-pnpm-${{ hashFiles('pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-

      - name: Enable Corepack
        # pnpm を利用するため Corepack を有効化
        run: corepack enable

      - name: Install dependencies
        # ロックファイルを厳密に使用して依存関係をインストール
        run: pnpm install --frozen-lockfile

      - name: Run Vitest with coverage
        # vitest をカバレッジ出力付きで実行
        run: |
          set -o pipefail
          pnpm test -- --run --coverage | tee vitest-report.txt

      - name: Upload Vitest artifacts
        if: always()
        # 生成されたカバレッジレポートとテストログをアーティファクトとして保存
        uses: actions/upload-artifact@v4
        with:
          name: vitest-results
          path: |
            vitest-report.txt
            coverage

      - name: Publish summary
        if: success()
        # 実行結果の概要を GitHub Actions サマリに出力
        run: |
          echo "## Vitest Results" >> $GITHUB_STEP_SUMMARY
          echo '\`\`\`' >> $GITHUB_STEP_SUMMARY
          tail -n 20 vitest-report.txt >> $GITHUB_STEP_SUMMARY
          echo '\`\`\`' >> $GITHUB_STEP_SUMMARY
          echo "Artifacts: vitest-report.txt and coverage directory" >> $GITHUB_STEP_SUMMARY
